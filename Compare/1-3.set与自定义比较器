#include<iostream>
#include<vector>
#include<set>
using namespace std;

class Node{
public:
	int key;
	int val;
public:
	Node(int h, int i) :key(h), val(i){}
};
//方式3:
class CmpASC{ //仿函数
public:
	bool operator()(const Node& a, const Node& b){ //参数类型:const
		if (a.key != b.key)
			return a.key < b.key; //升序
		else
			return a.val < b.val; //升序
	}
};
class CmpDesc{ //仿函数
public:
	bool operator()(const Node& a, const Node& b){
		if (a.key != b.key)
			return a.key > b.key; //降序
		else
			return a.val > b.val; //降序  
	}
};
void test01(){ //升序
	multiset<Node, CmpASC> set; //key递增,value递增
	set.emplace(Node(1, 5));
	set.emplace(Node(1, 2));
	set.emplace(Node(1, 3));
	set.emplace(Node(1, 1));
	set.emplace(Node(2, 5));
	set.emplace(Node(2, 2));
	set.emplace(Node(3, 3));
	set.emplace(Node(3, 1));
}
void test02(){ //降序
	multiset<Node, CmpDesc> set; //key递增,value递增
	set.emplace(Node(1, 5));
	set.emplace(Node(1, 2));
	set.emplace(Node(1, 3));
	set.emplace(Node(1, 1));
	set.emplace(Node(2, 5));
	set.emplace(Node(2, 2));
	set.emplace(Node(3, 3));
	set.emplace(Node(3, 1));
}
int main(){
	test01();
}
