**STL之迭代器失效** https://www.cnblogs.com/blueoverflow/p/4923523.html
【序列性容器】
vector 数组	
1.插入元素时，内存会重新分配，所有的迭代器都将失效；
2.插入元素时，指向当前元素以后的任何元素的迭代器都将失效。当删除元素时，指向被删除元素以后的任何元素的迭代器都将失效。

deque数组
1.1中间插入元素时，都将使deque的迭代器失效
1.2头或尾插入元素时，deque的迭代器不失效
2.1中间删除元素时，将使迭代器失效；
2.2头或尾删除元素时，只有指向该元素的迭代器失效。

priority_queue	一般使用vector作为底层存储方式
只能访问第一个元素，不能遍历整个priority_queue。
第一个元素始终是优先级最高的一个元素。

List双向链表	
1.增加任何元素都不会使迭代器失效
2.删除元素时，除了指向当前被删除元素的迭代器外，其它迭代器都不会失效
set/map红黑树	
1.如果迭代器所指向的元素被删除，则该迭代器失效。
2.其它任何增加、删除元素的操作都不会使迭代器失效。

=================

10.**STL中sort排序算法原理(只适用于随机迭代器) 
[1]全排序
    sort	快速排序+插入排序
    stable_sort	归并排序
[2]部分排序
    partial_sort	堆排序
[3]指定元素排序
    nth_element	  快速排序

